@using Models
@using Services
@inject IPokeApiClient PokeApiClient
@page "/pokeDetails/{name}"

@if (Pokemon == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <h5>Quien es ese pokemón???</h5><br />
    <div class="card overflow-hidden" style="width: 20rem;">
        <card class="card-header">
            @*con esto conseguimos que la primera letra siempre sea mayuscula y lad demas minisculas del nombre*@
            <h1>@Pokemon.Name.Substring(0, 1).ToUpper()@Pokemon.Name.Substring(1, Pokemon.Name.Length - 1)</h1>
            @foreach (var poke in Pokemon.Types)
            {
                <span class="badge border rounded-pill bg-@poke.PokemonType.Name" style="font-size:medium">
                    @(poke.PokemonType.Name)
                </span>
            }
        </card>
        <div class="card-img-top">
            <img src="https://img.pokemondb.net/artwork/large/@(Pokemon.Name).jpg" alt="@Pokemon.Name" class="img-fluid d-block mx-auto" style="width:300px" />
        </div>
        <div class="card-body">
            <ul class="list-group list-group-flush mt-4" style="width:20rem;">
                <li class="list-group-item bg-transparent">
                    ID: #<b class="float-end">@Pokemon.Id</b>
                </li>
                <li class="list-group-item bg-transparent">
                    Experience: <b class="float-end">@Pokemon.Experience</b>
                </li>
                <li class="list-group-item bg-transparent">
                    Weight: <b class="float-end">@Pokemon.Weight</b>
                </li>
                <li class="list-group-item bg-transparent">
                    Height <b class="float-end">@Pokemon.Height</b>
                </li>
            </ul>
        </div>
    </div>
}

@code {

    [Parameter]
    public string name { get; set; }

    public Pokemon Pokemon { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Pokemon = await PokeApiClient.GetPokemon(name);
    }
}
